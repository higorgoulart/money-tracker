// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyTracker.Infra.Data.Contexts;

#nullable disable

namespace MoneyTracker.Infra.Data.Migrations
{
    [DbContext(typeof(MoneyTrackerContext))]
    partial class TransactionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("MoneyTracker.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Casa",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Educação",
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Eletrônicos",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lazer",
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Restaurante",
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Saúde",
                            Type = 0
                        },
                        new
                        {
                            Id = 7,
                            Name = "Serviços",
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            Name = "Supermercado",
                            Type = 0
                        },
                        new
                        {
                            Id = 9,
                            Name = "Transporte",
                            Type = 0
                        },
                        new
                        {
                            Id = 10,
                            Name = "Vestuário",
                            Type = 0
                        },
                        new
                        {
                            Id = 11,
                            Name = "Viagem",
                            Type = 0
                        },
                        new
                        {
                            Id = 12,
                            Name = "Outros",
                            Type = 0
                        },
                        new
                        {
                            Id = 13,
                            Name = "Investimentos",
                            Type = 1
                        },
                        new
                        {
                            Id = 14,
                            Name = "Presente",
                            Type = 1
                        },
                        new
                        {
                            Id = 15,
                            Name = "Prêmios",
                            Type = 1
                        },
                        new
                        {
                            Id = 16,
                            Name = "Salário",
                            Type = 1
                        },
                        new
                        {
                            Id = 17,
                            Name = "Outros",
                            Type = 1
                        });
                });

            modelBuilder.Entity("MoneyTracker.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MoneyTracker.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("MoneyTracker.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
